@page "/charts/"
@using ChartJs.Blazor.PieChart
@using System.Drawing
@using ChartJs.Blazor.Util
@using ChartJs.Blazor.Common
@using ChartJs.Blazor.Common.Axes
@using ChartJs.Blazor.Common.Axes.Ticks
@using ChartJs.Blazor.Common.Enums
@using ChartJs.Blazor.Common.Handlers
@using ChartJs.Blazor.Common.Time
@using ChartJs.Blazor.Interop
@using ChartJs.Blazor.LineChart

<div style="width:500px;">
<Chart Config="_config2" ></Chart>
</div>
@code {
    private LineConfig _config2;

    protected override void OnInitialized()
    {
        _config2 = new LineConfig
            {
                Options = new LineOptions
                {
                    Responsive = true,
                    Title = new OptionsTitle
                    {
                        Display = true,
                        Text = "ChartJs.Blazor Line Chart"
                    },
                    Tooltips = new Tooltips
                    {
                        Mode = InteractionMode.Nearest,
                        Intersect = true
                    },
                    Hover = new Hover
                    {
                        Mode = InteractionMode.Nearest,
                        Intersect = true
                    },
                    Scales = new Scales
                    {
                        XAxes = new List<CartesianAxis>
                    {
                        new CategoryAxis
                        {
                            ScaleLabel = new ScaleLabel
                            {
                                LabelString = "Month"
                            }
                        }
                    },
                        YAxes = new List<CartesianAxis>
                    {
                        new LinearCartesianAxis
                        {
                            ScaleLabel = new ScaleLabel
                            {
                                LabelString = "Value"
                            }
                        }
                    }
                    }
                }
            };
        foreach (string color in new[] { "Yellow", "Blue", "Green", "Red", "White" })
        {
            _config2.Data.Labels.Add(color);
        }
        _config2.Data.Labels.Add("Black");

        LineDataset<double> dataset = new LineDataset<double>(new[] { 6.0, 5.3, 7.2, 7.8, 4.5, 9.5 })
            {
                BorderColor = ColorUtil.ColorHexString(54, 162, 235), // Set line color (e.g., "Blue")
                Fill = false, // To prevent filling the area under the line
               
            };

        _config2.Data.Datasets.Add(dataset);
    }
}

    
}